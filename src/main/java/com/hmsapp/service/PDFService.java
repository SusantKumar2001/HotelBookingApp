package com.hmsapp.service;

import com.hmsapp.entity.Booking;
import com.hmsapp.entity.RoomsAvailability;
import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import org.springframework.stereotype.Service;

import java.io.FileOutputStream;
import java.io.IOException;
import java.time.LocalDate;

@Service
public class PDFService {

    public void generateBookingPdf(String filepath, Booking booking, LocalDate fromDate, LocalDate toDate, String roomType,long totalNights,double total_price) throws DocumentException, IOException {
        // Create a new document
        Document document = new Document();
        PdfWriter.getInstance(document, new FileOutputStream(filepath));
        document.open();

        // Add a title to the PDF
        Paragraph title = new Paragraph("Booking Details", new Font(Font.FontFamily.HELVETICA, 18, Font.BOLD));
        title.setAlignment(Element.ALIGN_CENTER);
        title.setSpacingAfter(20);
        document.add(title);

        // Create a table with 2 columns
        PdfPTable table = new PdfPTable(2);
        table.setWidthPercentage(100); // Set table width to 100%
        table.setSpacingBefore(10f); // Space before the table
        table.setSpacingAfter(10f); // Space after the table
        table.setWidths(new float[]{30f, 70f}); // Set column widths (30% and 70%)

        // Add table headers
        PdfPCell header1 = new PdfPCell(new Phrase("Field"));
        header1.setBackgroundColor(BaseColor.LIGHT_GRAY);
        header1.setHorizontalAlignment(Element.ALIGN_CENTER);
        header1.setVerticalAlignment(Element.ALIGN_MIDDLE);
        table.addCell(header1);

        PdfPCell header2 = new PdfPCell(new Phrase("Value"));
        header2.setBackgroundColor(BaseColor.LIGHT_GRAY);
        header2.setHorizontalAlignment(Element.ALIGN_CENTER);
        header2.setVerticalAlignment(Element.ALIGN_MIDDLE);
        table.addCell(header2);

        // Add data rows
        table.addCell("Id");
        table.addCell(String.valueOf(booking.getId()));

        table.addCell("Guest Name");
        table.addCell(booking.getGuestName());

        table.addCell("Email");
        table.addCell(booking.getEmail());

        table.addCell("Mobile");
        table.addCell(booking.getMobile());

        table.addCell("No of Guests");
        table.addCell(String.valueOf(booking.getNoOfGuests()));

        table.addCell("Check-in Date");
        table.addCell(String.valueOf(fromDate));

        table.addCell("Check-out Date");
        table.addCell(String.valueOf(toDate));

        table.addCell("Room Type");
        table.addCell(roomType);

        table.addCell("Total Nights");
        table.addCell(String.valueOf(totalNights));

        table.addCell("Total Price(include 18% gst)");
        table.addCell(String.valueOf(total_price));



        // Add the table to the document
        document.add(table);

        // Add a footer
        Paragraph footer = new Paragraph("Generated by Airbnb", new Font(Font.FontFamily.HELVETICA, 10, Font.ITALIC));
        footer.setAlignment(Element.ALIGN_CENTER);
        footer.setSpacingBefore(20);
        document.add(footer);

        // Close the document
        document.close();
    }

}
